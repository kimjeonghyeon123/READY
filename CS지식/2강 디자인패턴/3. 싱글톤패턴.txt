1. 싱글톤 패턴
  1) 하나의 클래스가 오직 하나의 인스턴스만 가지는 패턴
  
  2) 장점
    - 인스턴스 생성 비용이 줄어듭니다.
    - IO Bound 작업에 많이 사용. 연결하는데 시간이나 비용이 많이 들기 
      때문에 사용한다.
      - ex) DB 연결하는 작업

  3) 단점
    - 의존성이 높아지고 단위 테스트를 할 때 서로 독립적이어서 순서에
      순서에 상관없이 돌릴 수 있어야 하는데 싱글톤 패턴을 적용하면 
      독립적인 인스턴스를 만들기 어렵다.

2. 구현하는 방법
  1) 생성자를 private로 하여 생성자를 통한 인스턴스의 생성을 막고
     static으로 선언된 getInstance라는 메서드를 통해 인스턴스를 받을 
     수 있도록 함
  2) synchronized 키워드를 통해 최초로 접근한 스레드 이외의
     다른 쓰레드에서 접근하지 못하도록 락을 걸어줍니다.
  3) 성능저하 발생

  1) 객체 생성할 때 final static으로 생성 후 인스턴스 반환

