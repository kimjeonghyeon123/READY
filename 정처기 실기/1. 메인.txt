1. 요구사항
  1) 기능 요구사항
    - 입출력
  2) 비기능 요구사항
  3) 사용자 요구사항
  4) 시스템 요구사항

2. 자료 흐름도
  1) 프로세스(Process)
  2) 자료 흐름(Data Flow)
  3) 자료 저장소(Data Store)
  4) 단말(Terminator)

3. UML
  1) 사물
    - 구조 사물 : 시스템의 개념적 물리적 요소 표현
    - 행동 사물 : 시간과 공간에 따른 요소들의 행위 표현
    - 그룹 사물 : 요소들을 그룹으로 묶어서 표현
    - 주해 사물 : 부가적인 설명이나 제약조건 등을 표현
  2) 관계
    - 연관 관계
    - 집합 관계 : 서로 독립적인 관계
    - 포함 관계 : 포함하는 사물의 변화가 포함되는 사물에게 영향
    - 일반화 관계
    - 의존 관계
    - 실체화 관계
  3) 다이어그램
    - 구조적 다이어그램
      - 객체 다이어그램 : 럼바우 객체 모델링에 사용
      - 클래스 다이어그램 : 클래스와 클래스 아이 관계
      - 컴포넌트 다이어그램 : 구현단계
      - 배치 다이어그램 : 물리적 요소들의 위치 표현, 구현단계
      - 복합체 구조 다이어그램 : 복합 구조를 갖는 경우 내부 구조 표현
      - 패키지 다이어그램 : 그룹화한 패키지들의 관계 표현
    - 행위 다이어그램
      - 유스케이스 다이어그램 : 사용자 요구 분석, 기능 모델링
      - 순차 다이어그램 : 메시지 표현
      - 커뮤니케이션 다이어그램 : 메시지와 객체들 간의 연관 관계 표현
      - 활동 다이어그램 : 처리의 흐름을 순서에 따라 표현
      - 상태 다이어그램 : 럼바우 동적 모델링, 하나의 객체가 상호작용에 따라 어떻게 변화하는지 표현
      - 상호작용 개요 다이어그램 : 상호작용 다이어그램 간의 제어 흐름 표현
      - 타이밍 다이어그램 : 객체 상태 변화와 시간 제약을 명시적으로 표현

  4) 클래스 다이어그램
    - 클래스 간의 관계 표현
    - 클래스, 제약조건, 관계
    - 연관 클래스 : 연관 관계에 있는 두 클래스에 추가적으로 표현해야 할 속성이나 오퍼레이션이 있는 경우 생성하는 클래스

  5) 순차 다이어그램
    - 동적 모델링 : 시스템 내부 구성 요소들의 상태 변화 과정과 상호작용 표현
    - 메시지 주고받으며 상호작용하는 과정 표현
    - 구성요소
      - 액터
      - 객체
      - 생명선
      - 실행 상자
      - 메시지
      - 객체 소멸
      - 프레임
    
  6) 패키지 다이어그램
    - 그룹화한 패키지들 간의 의존 관계 표현
    - 패키지, 객체, 의존 관계

4. 소프트웨어 재사용
  1) 이미 개발된 소프트웨어를 다른 소프트웨어 개발이나 유지에 사용하는 것
    - 합성 중심(블럭 구성 방법) : 블럭 끼워
    - 생성 중심(패턴 구성 방법) : 추상화 형태를 구체화

  2) 소프트웨어 재공학
    - 기존 시스템을 이용해 좋은 소프트웨어, 기능 추가하여 성능 향상

  3) CASE(Computer Aided Software Engineering)
    - 소프트웨어 개발 과정에서 사용되는 요구분석, 설계, 구현 과정을 컴퓨터와 전용 소프트웨어 도구를 사용하여 자동화하는 것
    - 생명 주기 전 단계 연결, 개발 모형 지원, 그래픽 지원

5. 상향식 비용 산정 기법
  1) LOC(source Line Of Code) 기법
    - 예측치 = (낙관치 + 4*기대치 + 비관치) / 6

6. 수학적 산정 기법
  - COCOMO 모형
    - 보헴, LOC
    - 조직형, 반분리형, 내장형
  - Putnam 모형
    - 소프트웨어 생명 주기 전 과정 동안에 사용될 노력의 분포 예상
    - Rayleigh-Norden 곡선
  - 기능 점수(FP) 모형
    - 소프트웨어 기능을 증대시키는 요인별 가중치 부여
    - 자료입력, 정보출력, 명령어, 데이터 파일, 인터페이스
  - 비용 산정 자동화 추정 도구
    - SLIM : Putnam 모형
    - ESTIMACS : FP 모형

7. 프로젝트 일정 계획
  1) PERT
    - 전체 작업의 상호 관계 표시하는 네트워크
  
  2) CPM
    - 작업을 나열하고 작업에 필요한 소요 기간 예측
    - 임계 경로 : 최장 경로

  3) 간트 차트
    - 시간선 차트
    - 막대 도표 사용하여 프로젝트 일정표

8. 소프트웨어 개발 표준
  1) ISO/IEC 12207
    - 표준 소프트웨어 생명 주기 프로세스
    - 기본 생명 주기 프로세스, 지원 생명 주기 프로세스, 조직 생명 주기 프로세스

  2) CMMI(능력 성숙도 통합 모델)
    - 개발 조직의 업무 능력 및 성숙도 평가 모델
    - 초기, 관리, 정의, 정량적 관리, 최적화(초관정정최)

  3) SPICE(소프트웨어 처리 개선 및 능력 평가 기준)
    - ISO/IEC 15504
    - 소프트웨어 품질, 생산성 향상
    - 고객-공급자, 공학, 지원, 관리, 조직(고공 지원 관리조직)
    - 불완전, 수행, 관리, 확립, 예측, 최적화(불수관확예최)

8. 소프트웨어 개발 프레임워크
  1) 스프링 프레임워크 : 자바
  2) 전자정부 프레임워크 : 공공부문 정보화 사엄
  3) 닷넷 프레임워크 : Windows 프로그램의 개발 및 실행 환경 제공하는 프레임워크
  4) 모듈화, 재상용성, 확장성, 제어의 역흐름(모재확제)

9. 데이터베이스(통저운공)
  1) 통합된 데이터
  2) 저장된 데이터
  3) 운영 데이터
  4) 공용 데이터

10. DBMS 필수 기능
  1) 정의, 조작, 제어(정조제)

11. 스키마(데이터베이스 구조와 제약조건에 관한 전반적인 명세를 기술한 것)
  1) 외부 스키마 : 각 개인의 입장에서 필요로 하는 데이터베이스 논리적 구조
  2) 개념 스키마 : 전체적인 논리적 구조, 하나만 존재
  3) 내부 스키마 : 물리적 저장장치 입장의 데이터베이스 구조, 데이터 형식 등

12. 데이터베이스 설계
  1) 고려사항
    - 무결성, 일관성, 회복, 보안, 효율성, 데이터베이스 확장
  
  2) 순서
    - 요구 조건 분석
    - 개념적 설계(정보 모델링)
      - 현실 세계를 추상적 개념으로 표현
    - 논리적 설계(데이터 모델링)
      - 특정 DBMS가 지원하는 논리적 자료 구조로 매핑
      - 트랜잭션 인터페이스 설계
    - 물리적 설계(데이터 구조화)
    - 구현

13. 데이터 모델
  1) 데이터 모델 구성 요소(개속 관계)
    - 개체, 속성, 관계
  2) 데이터 모델에 표시할 요소(구연산 제약)
    - 구조, 연산, 제약 조건

14. E-R 모델
  1) 개체, 관계, 속성
  2) 피터 첸

15. 관계형 데이터 모델
  1) 코드
  2) 2차원 적인 표를 이용해 데이터 상호 관계 정의하는 데이터베이스

16. 키
  1) 유일성 최소성

17. 무결성
  1) 데이터베이스 값과 현실 세계 값이 일치하는 정확성
  2) 무결성 종류
    - 개체 무결성 : 기본키는 null이나 중복값을 가질 수 없음
    - 참조 무결성 : 외래키 값은 null이거나 참조 릴레이션의 기본키 값과 동일
    - 도메인 무결성 : 도메인에 속한 값
    - 사용자 정의 무결성 : 정의한 제약 조건 만족해야 함
    - NULL 무결성 : 특정 속성이 null이 될 수 없음
    - 고유 무결성 : 특정 속성은 서로 달라야 함
    - 키 무결성 : 키 하나는 존재해야 함
    - 관계 무결성 : 관계에 대한 적정성 여부
  3) 무결성 강화
    - 애플리케이션
    - 데이터베이스 트리거
    - 제약 조건

18. 관계 대수 및 관계 해석
  1) 관계 대수 : 원하는 정보를 검색하기 위한 절차적인 언어
  2) 순수 관계 연산자
    - Select : 시그마
    - Project : 파이
    - Join : 리본
    - Division : ÷
  3) 일반 집합 연산자
    - 합집합(UNION) : ∪
    - 교집합(INTERSECTION) : ∩
    - 차집합(DIFFERENCE) : -
    - 교차곱(CARTESIAN PRODUCT) : X

  4) 관계해석
    - 관계 데이터의 연산 표현
    - 코드
    - 